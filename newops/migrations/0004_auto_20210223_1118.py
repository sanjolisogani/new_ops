# Generated by Django 3.0.5 on 2021-02-23 11:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('newops', '0003_device_iam_mechanism_devicespecification_dps_property_iot_hub_vendor'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('app_name', models.CharField(blank=True, max_length=100, null=True)),
                ('app_type', models.CharField(choices=[('Source', 'Source'), ('End', 'End')], default=None, max_length=100, null=True)),
                ('app_function', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CA',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('CAtype', models.CharField(choices=[('True', 'Self'), ('False', 'CA')], default=None, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(choices=[('IN', 'India'), ('US', 'USA'), ('CA', 'CANADA'), ('BE', 'Belguim'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DE', 'Germany'), ('EE', 'Estonia'), ('IE', 'Ireland'), ('EL', 'Greece'), ('ES', 'Spain'), ('FR', 'France'), ('HR', 'Crotia'), ('IT', 'Italy'), ('CY', 'Cyprus'), ('LV', 'Latvia'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('HU', 'Hungary'), ('MT', 'Malta'), ('NL', 'Netherlands'), ('AT', 'Austria'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('SL', 'Slovenia'), ('SK', 'Slovakia'), ('FI', 'Finland'), ('SW', 'Sweden'), ('TH', 'Thailand')], default=None, max_length=100, null=True)),
                ('zip_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^\\d{1,6}$')])),
                ('primary_contact_person', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('primary_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('secondary_contact_person', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('s_designation', models.CharField(blank=True, max_length=100, null=True)),
                ('secondary_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('website', models.URLField(blank=True, max_length=100, null=True)),
                ('gst', models.CharField(blank=True, max_length=100, null=True)),
                ('vat', models.CharField(blank=True, max_length=100, null=True)),
                ('installation_mode', models.CharField(choices=[('Edge', 'Edge'), ('Cloud', 'Cloud'), ('Hybrid', 'Hybrid'), ('Other', 'Other')], default=None, max_length=100, null=True)),
                ('no_of_site', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], default=None, max_length=100, null=True)),
                ('site1', models.CharField(blank=True, max_length=100, null=True)),
                ('address_site1', models.CharField(blank=True, max_length=100, null=True)),
                ('city_site1', models.CharField(blank=True, max_length=100, null=True)),
                ('country_site1', models.CharField(choices=[('IN', 'India'), ('US', 'USA'), ('CA', 'CANADA'), ('BE', 'Belguim'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DE', 'Germany'), ('EE', 'Estonia'), ('IE', 'Ireland'), ('EL', 'Greece'), ('ES', 'Spain'), ('FR', 'France'), ('HR', 'Crotia'), ('IT', 'Italy'), ('CY', 'Cyprus'), ('LV', 'Latvia'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('HU', 'Hungary'), ('MT', 'Malta'), ('NL', 'Netherlands'), ('AT', 'Austria'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('SL', 'Slovenia'), ('SK', 'Slovakia'), ('FI', 'Finland'), ('SW', 'Sweden'), ('TH', 'Thailand')], default=None, max_length=100, null=True)),
                ('site2', models.CharField(blank=True, max_length=100, null=True)),
                ('address_site2', models.CharField(blank=True, max_length=100, null=True)),
                ('city_site2', models.CharField(blank=True, max_length=100, null=True)),
                ('country_site2', models.CharField(choices=[('IN', 'India'), ('US', 'USA'), ('CA', 'CANADA'), ('BE', 'Belguim'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DE', 'Germany'), ('EE', 'Estonia'), ('IE', 'Ireland'), ('EL', 'Greece'), ('ES', 'Spain'), ('FR', 'France'), ('HR', 'Crotia'), ('IT', 'Italy'), ('CY', 'Cyprus'), ('LV', 'Latvia'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('HU', 'Hungary'), ('MT', 'Malta'), ('NL', 'Netherlands'), ('AT', 'Austria'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('SL', 'Slovenia'), ('SK', 'Slovakia'), ('FI', 'Finland'), ('SW', 'Sweden'), ('TH', 'Thailand')], default=None, max_length=100, null=True)),
                ('site3', models.CharField(blank=True, max_length=100, null=True)),
                ('address_site3', models.CharField(blank=True, max_length=100, null=True)),
                ('city_site3', models.CharField(blank=True, max_length=100, null=True)),
                ('country_site3', models.CharField(choices=[('IN', 'India'), ('US', 'USA'), ('CA', 'CANADA'), ('BE', 'Belguim'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DE', 'Germany'), ('EE', 'Estonia'), ('IE', 'Ireland'), ('EL', 'Greece'), ('ES', 'Spain'), ('FR', 'France'), ('HR', 'Crotia'), ('IT', 'Italy'), ('CY', 'Cyprus'), ('LV', 'Latvia'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('HU', 'Hungary'), ('MT', 'Malta'), ('NL', 'Netherlands'), ('AT', 'Austria'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('SL', 'Slovenia'), ('SK', 'Slovakia'), ('FI', 'Finland'), ('SW', 'Sweden'), ('TH', 'Thailand')], default=None, max_length=100, null=True)),
                ('application', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='newops.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permission_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('add_permission', models.CharField(choices=[('True', 'True'), ('False', 'False')], default=None, max_length=100, null=True)),
                ('edit_permission', models.CharField(choices=[('True', 'True'), ('False', 'False')], default=None, max_length=100, null=True)),
                ('modify_permission', models.CharField(choices=[('True', 'True'), ('False', 'False')], default=None, max_length=100, null=True)),
                ('view_permission', models.CharField(choices=[('True', 'True'), ('False', 'False')], default=None, max_length=100, null=True)),
                ('log_permission', models.CharField(choices=[('True', 'True'), ('False', 'False')], default=None, max_length=100, null=True)),
                ('delete_permission', models.CharField(choices=[('True', 'True'), ('False', 'False')], default=None, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usergroup', models.CharField(blank=True, max_length=100, null=True)),
                ('superadmin', models.CharField(blank=True, max_length=100, null=True)),
                ('admin', models.CharField(blank=True, max_length=100, null=True)),
                ('localadmin', models.CharField(blank=True, max_length=100, null=True)),
                ('manager', models.CharField(blank=True, max_length=100, null=True)),
                ('supervisor', models.CharField(blank=True, max_length=100, null=True)),
                ('operator', models.CharField(blank=True, max_length=100, null=True)),
                ('support', models.CharField(blank=True, max_length=100, null=True)),
                ('staff', models.CharField(blank=True, max_length=100, null=True)),
                ('other1', models.CharField(blank=True, max_length=100, null=True)),
                ('other2', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Usertype',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_type', models.CharField(choices=[('Staff', 'Staff'), ('Vendor', 'Vendor'), ('Customer', 'Customer')], default=None, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('page_name', models.CharField(blank=True, max_length=100, null=True)),
                ('page_description', models.CharField(blank=True, max_length=100, null=True)),
                ('app_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='newops.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_type', models.CharField(choices=[('Edge', 'Edge'), ('Hardware Gateway', 'Hardware Gateway'), ('Software Gateway', 'Software Gateway'), ('Embedded Device', 'Embedded Device'), ('Other', 'Other')], default=None, max_length=100, null=True)),
                ('enrollment_type', models.CharField(choices=[('Group', 'Group'), ('Individual', 'Individual')], default=None, max_length=100, null=True)),
                ('device_registration_name', models.CharField(blank=True, max_length=100, null=True)),
                ('allocation_policy', models.CharField(choices=[('1', 'Lowest Latency'), ('2', 'Weight Distributed'), ('3', 'Static Configuration'), ('4', 'Custom(azure function)')], default=None, max_length=100, null=True)),
                ('secret_storage', models.CharField(choices=[('HSM', 'HSM'), ('TSM', 'TSM'), ('MEMORY', 'MEMORY')], default=None, max_length=100, null=True)),
                ('operation', models.CharField(choices=[('Register', 'Register'), ('Reregister', 'Reregister'), ('Delete', 'Delete')], default=None, max_length=100, null=True)),
                ('make', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_purchase', models.DateField(blank=True, null=True)),
                ('warrenty_period', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], default=None, max_length=100, null=True)),
                ('warrenty_expiry', models.DateField(blank=True, null=True)),
                ('Firmware_version', models.CharField(blank=True, max_length=100, null=True)),
                ('configured', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default=None, max_length=100, null=True)),
                ('device_IAM_mechanism', models.ManyToManyField(to='newops.Device_IAM_Mechanism')),
                ('device_Specification_ID', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.DeviceSpecification')),
                ('dps_property_ID', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.DPS_Property')),
                ('iot_hub_name', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.IOT_Hub')),
                ('route_to_application', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.Application')),
                ('sold_to_customer', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.Customer')),
                ('vendor', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.Vendor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('certificate_name', models.CharField(blank=True, max_length=100, null=True)),
                ('certFile_type', models.BooleanField(default=False)),
                ('generatedOn', models.DateTimeField(blank=True, null=True)),
                ('validity', models.DurationField(blank=True, null=True)),
                ('uploadedOn', models.DateTimeField(blank=True, null=True)),
                ('assigned', models.BooleanField(default=False)),
                ('assignedDate', models.DateTimeField(blank=True, null=True)),
                ('assignedTo', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.Device')),
                ('ca_name', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.CA')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetGroup',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assestname', models.CharField(blank=True, max_length=100, null=True)),
                ('Customer_ID', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='newops.Customer')),
                ('appname', models.ManyToManyField(to='newops.Application')),
                ('devicename', models.ManyToManyField(to='newops.Device')),
                ('pagename', models.ManyToManyField(to='newops.Pages')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='asset_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.AssetGroup'),
        ),
        migrations.AddField(
            model_name='user',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.Customer'),
        ),
        migrations.AddField(
            model_name='user',
            name='permission_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.Permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='newops.UserGroup'),
        ),
    ]
