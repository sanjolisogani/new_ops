# Generated by Django 3.0.5 on 2021-02-23 10:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('newops', '0002_auto_20210223_1052'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device_IAM_Mechanism',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('IAM', models.CharField(choices=[('X.509 Certificate', 'X.509 Certificate'), ('TPM', 'TPM'), ('Symetric Key', 'Symetric Key'), ('Password', 'Password')], default=None, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceSpecification',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('techSpecificationID', models.BigIntegerField(default=1)),
                ('techSpecificationName', models.CharField(blank=True, max_length=100, null=True)),
                ('device_type', models.CharField(choices=[('Edge', 'Edge'), ('Hardware Gateway', 'Hardware Gateway'), ('Software Gateway', 'Software Gateway'), ('Embedded Device', 'Embedded Device'), ('Other', 'Other')], default=None, max_length=100, null=True)),
                ('gps', models.BooleanField(default=False)),
                ('gsm', models.BooleanField(default=False)),
                ('wifi', models.BooleanField(default=False)),
                ('ble', models.BooleanField(default=False)),
                ('zigbee', models.BooleanField(default=False)),
                ('zigwave', models.BooleanField(default=False)),
                ('rs_232', models.BooleanField(default=False)),
                ('rs_485', models.BooleanField(default=False)),
                ('rs_422', models.BooleanField(default=False)),
                ('tcp', models.BooleanField(default=False)),
                ('mqtt', models.BooleanField(default=False)),
                ('http', models.BooleanField(default=False)),
                ('symetric_key', models.BooleanField(default=False)),
                ('x509_Certificate', models.BooleanField(default=False)),
                ('ota', models.BooleanField(default=False)),
                ('inputs', models.BooleanField(default=False)),
                ('outputs', models.BooleanField(default=False)),
                ('ethernet', models.BooleanField(default=False)),
                ('analog_input', models.BooleanField(default=False)),
                ('power_supply', models.FloatField()),
                ('other1', models.CharField(blank=True, max_length=100, null=True)),
                ('other2', models.CharField(blank=True, max_length=100, null=True)),
                ('other3', models.CharField(blank=True, max_length=100, null=True)),
                ('security_key', models.CharField(choices=[('HSM', 'HSM'), ('TPM', 'TPM')], default=None, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DPS_Property',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dps_name', models.CharField(blank=True, max_length=100, null=True)),
                ('resourse_type', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(choices=[('IN', 'India'), ('US', 'USA'), ('CA', 'CANADA'), ('BE', 'Belguim'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DE', 'Germany'), ('EE', 'Estonia'), ('IE', 'Ireland'), ('EL', 'Greece'), ('ES', 'Spain'), ('FR', 'France'), ('HR', 'Crotia'), ('IT', 'Italy'), ('CY', 'Cyprus'), ('LV', 'Latvia'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('HU', 'Hungary'), ('MT', 'Malta'), ('NL', 'Netherlands'), ('AT', 'Austria'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('SL', 'Slovenia'), ('SK', 'Slovakia'), ('FI', 'Finland'), ('SW', 'Sweden'), ('TH', 'Thailand')], default=None, max_length=100, null=True)),
                ('location_ID', models.CharField(blank=True, max_length=100, null=True)),
                ('resourse_ID', models.CharField(blank=True, max_length=100, null=True)),
                ('resourse_group', models.CharField(blank=True, max_length=100, null=True)),
                ('resourse_group_id', models.CharField(blank=True, max_length=100, null=True)),
                ('subscription', models.CharField(blank=True, max_length=100, null=True)),
                ('subscription_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_address', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_city', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_country', models.CharField(choices=[('IN', 'India'), ('US', 'USA'), ('CA', 'CANADA'), ('BE', 'Belguim'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DE', 'Germany'), ('EE', 'Estonia'), ('IE', 'Ireland'), ('EL', 'Greece'), ('ES', 'Spain'), ('FR', 'France'), ('HR', 'Crotia'), ('IT', 'Italy'), ('CY', 'Cyprus'), ('LV', 'Latvia'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('HU', 'Hungary'), ('MT', 'Malta'), ('NL', 'Netherlands'), ('AT', 'Austria'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('SL', 'Slovenia'), ('SK', 'Slovakia'), ('FI', 'Finland'), ('SW', 'Sweden'), ('TH', 'Thailand')], default=None, max_length=100, null=True)),
                ('zip_code', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999)])),
                ('vendor_contact', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('vendor_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('web', models.URLField(blank=True, max_length=100, null=True)),
                ('vendor_VAT', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_other1', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_other2', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_other3', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IOT_Hub',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hub_name', models.CharField(blank=True, max_length=100, null=True)),
                ('hostname', models.URLField(blank=True, max_length=100, null=True)),
                ('status', models.BooleanField(default=False)),
                ('current_location', models.CharField(blank=True, max_length=100, null=True)),
                ('subscription', models.BooleanField(default=False)),
                ('resourse_group', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='newops.DPS_Property')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
